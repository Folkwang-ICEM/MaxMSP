# -*- mode: org; mode: visual-line; -*-

Michael Edwards, October 23rd 2023

(Best viewed 'Raw' or in Emacs rather than in the web browser on github.com)

** Usage

hybrid-outputs offers a hybrid approach to outputting signals to loudspeakers
using MaxMSP. It is intended to be the last step in the chain before sending
signals out of the sound card to the loudspeakers. As such it is not expected
that gain changes are made with this patch during performance---though that
would of course be possible va the live.gain~ interface objects---rather gains
are controlled in another patch. This sums all signals and sends them to this
patch via a multi-channel signal [mc.send~ hybrid.outputs.sig]. By default. This
is eight channels, but this could be modified fairly easily.

When I say fairly easily, though, I mean that the main patch here could be used
as a template to create other mapping situations. It is not meant to provide a
simple interface for mapping any number of imports to outputs. That may well be
possible, but the limitations of some of these objects mean that their arguments
need to be provided for channel I/O and these may need to be hard-code.

There are two output methods on offer here:
1. straightforward mapping of inputs to outputs via the matrix method, in which
   arbitrary inputs can be mapped to any number of arbitrary outputs, controlled
   by individual gains
  - the inputs are represented by the columns in the matrix and the outputs by
    rows
  - the patch was developed for the main concert hall of the Folkwang University
    of the Arts' /Neue Aula/, but it could easily be adapted to any other space
    with an arbitrary number ofloud speakers
2.  mapping of the inputs to the outputs via ambisonics panning.

The Matrix object on the left of the main patch allows you to click on any input
column and map to an output row. By holding the mouse and 'turning up' the dial
you can easily control the output's gain. The current output's gain is displayed
at the bottom of the matrix object.

There is a preset object at the top of the matrix which allows you to store your
settings. These are saved with the patch. The ambisonics interface objects on
the right cannot be used with the preset object, but they have a separate
mechanism for storing source and speaker positions. This is connected to the
preset object so that saving of presets takes place transparently to the
user. However, when loading the patch, sometimes you will get an error that
speaker positions, for example, can't be found. Hopefully these have been saved
however, and you can load them by clicking on the read button and selecting the
respective XML file. Clicking then on the preset you wish to load should
retrieve speaker and source positions.

The channel-test sub-patch allows you to constantly send short pink noise bursts
out of each channel consecutively, starting over from the beginning once you
have reached the last channel. If you select /dac/ from the drop-down menu, then
this will output the noise bursts to each of the speakers consecutively. If you
select sources, then this will simulate the incoming channels with noise bursts
instead. These are then processed and sent out of the speakers, using the matrix
and ambisonics approaches simultaneously. Adjust the number of channels to
output according to whether you are testing speakers or sources and don't forget
to select /off/ from the menu when you are done, otherwise your performance
could become quite annoying (unless pink noise bursts really float your boat).

** Speaker channel ordering (von Beschallung) October 2023
01: Sub
02: Center
03: Frontfill LL
04: Frontfill L
05: Frontfill C
06: Frontfill R
07: Frontfill RR
08: Seite Links Vorn
09: Seite Links Mitte
10: Seite Links Hinten
11: Decke Links Vorn
12: Decke Links Mitte
13: Decke Links Hinten
14: Seite Rechts Vorn
15: Seite Rechts Mitte
16: Seite Rechts Hinten
17: Decke Rechts Vorn
18: Decke Rechts Mitte
19: Decke Rechts Hinten
20: Hinten L
21: Hinten R
22: Empore LL
23: Empore L
24: Empore R
25: Empore RR
26: Vida Vorne L
27: Vida Vorne R
28: Vida Hinten R
29: Vida Hinten L

** My ordering:

See Begrundung below for an explanation.

01: Vida Vorne L
02: Vida Vorne R
03: Center
04: Sub
05: Vida Hinten L
06: Vida Hinten R

07: Seite Links Vorn
08: Seite Rechts Vorn
09: Seite Links Hinten
10: Seite Rechts Hinten
11: Seite Links Mitte
12: Seite Rechts Mitte

13: Decke Links Vorn
14: Decke Rechts Vorn
15: Decke Links Hinten
16: Decke Rechts Hinten
17: Decke Links Mitte
18: Decke Rechts Mitte

19: Hinten L
20: Hinten R

21: Frontfill LL
22: Frontfill L
23: Frontfill C
24: Frontfill R
25: Frontfill RR
26: Empore LL
27: Empore L
28: Empore R
29: Empore RR

** order for dac from 'my ordering' is:
26 27 2 1 29 28 8 14 10 16 9  15 11 17 13 19 12 18 20 21  3  4  5  6  7 22 23 24 25
1   2 3 4  5  6 7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29

** Begrundung 
- Lassen wir erstmals die Fills weg und wir haben 19.1
- Als quasi-Atmos/Surround wäre das 13.1.6
  - 13 auf der "Hörerebene" (tja)
  - ein Sub/LFE
  - und 6 "Height".
- Die Atmos Reihenfolgen, die ich sehe, folgen erstmal 5.1 "film format"
  - L R C LFE Ls Rs
  - bitte lassen wir die mp4 Videos die mit C L R Ls Rs LFE herumlaufern
  - so wohl als ITU 775 und SMPTE Surround
- Deswegen schlage ich "film format" auch für unsere ersten 6 Kanäle vor
- Zusätzliche Kanäle sind dann auch immer paarweise in der Reihenfolge
  Links-Rechts
  - zB 7.1.4 = L R C LFE Ls Rs L-Side (zw. L und Ls) R-Side dann "Height" L R Ls
    Rs.

